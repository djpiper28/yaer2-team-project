/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Jacoco for code coverage
    id 'jacoco'

    // Shadow for fat jars
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    shadow 'com.google.guava:guava:30.1.1-jre'

    // Postgresql
    implementation 'org.postgresql:postgresql:42.2.0'
    shadow 'org.postgresql:postgresql:42.2.0'
 
    // Eclipse Jetty
    implementation 'org.eclipse.jetty:jetty-server:9.4.3.v20170317'
    shadow 'org.eclipse.jetty:jetty-server:9.4.3.v20170317'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.3.v20170317'
    shadow 'org.eclipse.jetty:jetty-servlet:9.4.3.v20170317'
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    shadow 'javax.servlet:javax.servlet-api:3.1.0'

    // Jsoup for testing
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'org.jsoup:jsoup:1.14.3'
    
    // Json Library
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    shadow 'com.googlecode.json-simple:json-simple:1.1.1'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.2'
    shadow 'io.jsonwebtoken:jjwt:0.2'

    // Dotenv
    implementation 'io.github.cdimascio:java-dotenv:3.0.0'
    shadow 'io.github.cdimascio:java-dotenv:3.0.0'

    // XML Bind thing
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    shadow "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Log4j
    implementation "org.apache.logging.log4j:log4j-core:2.17.0"
    implementation "org.apache.logging.log4j:log4j-api:2.17.0"

    implementation "org.slf4j:slf4j-log4j12:1.7.29"
    constraints {
        implementation("org.apache.logging.log4j:log4j-core") {
            version {
                strictly("[2.17, 3[")
                prefer("2.17.0")
            }
            because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
        }

        implementation("org.apache.logging.log4j:log4j-api") {
            version {
                strictly("[2.17, 3[")
                prefer("2.17.0")
            }
            because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
        }
    }

    // dbcp - database connection pooling
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    shadow 'org.apache.commons:commons-dbcp2:2.9.0'
}

jacocoTestReport {
    reports {
        csv.enabled = false
        xml.enabled = true
        html.enabled = true
    }

	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it,
				exclude: [
					'**/test/*.class'
				]
			)
		})
	}
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.7.2')
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'backend.App'
}
